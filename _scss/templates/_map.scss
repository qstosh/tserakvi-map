// map size
$map-width: 1440px;
$map-height: 1046px;

// definition's size
$w: 310px;

// arrow
$offset-arrow: 200px;

// typography
$font-size-h1: 1.2rem;
$padding-h1-top: $space;
$padding-h1-bottom: $space + 0.45rem;
$dickbutt: .05rem;

// headers' sizes
$h-h1: ($padding-h1-top + $padding-h1-bottom + $font-size-h1);
$h-h1-two-lines: 164px;

// borders' sizes
$border-w: 2px;

// vignette
html.map {

  &,
  body {

    overflow: hidden;
    height: 100%;
  }

  body {

    position: relative;
    background: $black;

    opacity: 0;
    transform: translate3d(0,0,0) scale(1.2);

    transition: opacity .2s ease .5s,
                transform .3s ease-out .5s;

    &.loaded {

      opacity: 1;
      transform: translate3d(0,0,0) scale(1);
      will-change: opacity, transform;
    }

    &:after {

      content: "";
      @extend %fill-viewport;
      box-shadow: inset 0 0 100px black;
      pointer-events: none;

      will-change: opacity;
      opacity: .4;
      transition: opacity .2s ease .5s;

      z-index: 20;
    }

    &.zoomed-in:after {

      opacity: 1;
      transition: opacity .2s ease;
    }
  }
}

html.map .intro {

  position: relative;
  z-index: 1;
  width: $text-column-fallback;
  width: $text-column;
  // margin-top: -10rem;

  padding: $space-and-half;
  background: rgba(255,255,255,.5);
  background: white;

  h2 {

    margin-top: 0;
  }
}

html.map .image {

  position: absolute;
  top: 50%;
  left: 50%;
  margin: (-$map-height / 2) 0 0 (-$map-width / 2);

  background: url("../images/map.jpg") no-repeat center center;

  transform-origin: center center;
  transform: translate3d(0, 0, 0) scale(.75);

  transition: transform .3s ease .1s;
  backface-visibility: hidden;

  background-size: 100%;

  z-index: 1;

  @include media(highdpi) {

    background-image: url("../images/map@2x.jpg");
  }

  &--svg {

    background-image: url("../images/map.svg");

    @include media(highdpi) {

      background-image: url("../images/map.svg");
    }
  }

  &[class*="remove-active"] {

    will-change: transform;
  }

  .definition {

    transition: opacity .3s ease 1s;
  }

  &--zoomed {

    .definition {

      will-change: opacity;
      opacity: 0;
      transition: opacity .3s ease 0s;

      z-index: -1;
    }

    .definition--active {

      opacity: 1;

      z-index: 2;
    }
  }

  &__background {

    @include square(999rem);
    @include center;

    &--zoomed-in {

    cursor: zoom-out;
    }
  }
}

html.map .toggle {

  position: fixed;
  z-index: 9999;
  right: $space;

  &--definition {

    top: $space;
  }

  &--intro {

    top: $space + 3rem;
  }

  label {

    cursor: pointer;

    &.ng-animate {

      transition: none;
    }
  }
}

html.map .definition {

  left: 50%;
  top: 50%;
  transform-origin: left top;
  transform-style: flat;

  &.ng-hide {

    opacity: 0;
    z-index: -1;
    transition-delay: 0s;
  }

  &.ng-hide-remove {

    transition-delay: 0s;
  }

  &,
  > *,
  &__pointer > * {

    position: absolute;
  }

  &__pointer {

    transform-origin: left bottom;
    transform: scale(0);

    transition: transform .2s ease .6s;

    &.ng-animate {

      z-index: 999;
    }

    &__dot,
    &__arrow {

      pointer-events: none;
    }

    &__dot {

      @include circle(20px);
      transform: translate(-50%, -50%);
      z-index: 1;

      &:after {

        content: "";
        @include circle(10px);
        @extend %center;
        background: $white;
      }
    }

    &__arrow {

      overflow: visible !important;
    }

    &--active {

      will-change: transform;
    }
  }

  &__label {

    width: $w;
    height: 300px;
    background-color: $white;
    overflow: hidden;

    clip: rect(0px $w ($h-h1) 0);
    transform: translate(0, 0);

    transition: clip .2s ease .1s, transform .2s ease .6s, opacity .2s ease;
    z-index: 100;

    opacity: 1;
    border: $border-w solid $black;

    &__scroll-container {

      position: relative;
      z-index: 1;
      height: 200px;
      overflow: auto;

      &:before,
      &:after {

        content: "";
        display: none;
        position: fixed;
        left: 0;
        width: 100%;
        height: 2rem;
        z-index: 2;
      }

      &:before {

        background: linear-gradient(to bottom, white 0%, white 20%, transparent 100%);
        top: $h-h1 - .1rem;
      }

      &:after {

        background: linear-gradient(to top, white 0%, white 20%, transparent 100%);
        bottom: 2rem;
      }
    }

    &:hover {

      opacity: 1;
    }

    &.ng-animate {

      z-index: 9999;
    }

    &:not(.definition__label--active) {

      cursor: pointer;
    }

    h1,
    p {

      position: relative;
    }

    h1 {

      margin: 0;
      padding: $padding-h1-top 0 $padding-h1-bottom;
      line-height: 1;

      font-size: $font-size-h1;

      backface-visibility: hidden;

      &:after {

        content: "";
        position: absolute;
        width: 100%;
        left: 0;
        bottom: $border-w;

        border-top-style: solid;
        border-top-width: $border-w;
        border-color: inherit;

        will-change: transform, border-color;

        transform: scale(1, 1);
        transition: all .4s ease;
      }
    }

    p {

      padding: 1.3rem 2rem 2rem 2rem; // buttom padding to make room for svg in p::after
      margin-top: 0;
    }

    img {

      display: none;
    }

    &--has-image {

      $h-image: 136px;

      .definition__label__scroll-container {

        &:before,
        &:after {

          // display: block;
        }
      }

      img {

        $w-temp: $space-and-half * 2;

        position: relative;
        display: block;
        left: 2rem;
        margin-bottom: 2rem;

        width: calc(#{$w} - 4rem);
        height: $h-image;

        object-fit: cover;
      }
    }

    &--active {

      will-change: clip, transform;
      clip: rect(0px $w 1000px 0);
      transition: clip .2s ease .6s, transform .2s ease .6s, opacity .2s ease;

      transform: translate(100px, -100px);

      opacity: 1;

      h1:after {

        transform: scale(.3, 1);
        border: 1px solid rgba(0, 0, 0, .15);
        transition: all .4s ease .7s;
      }
    }
  }

  &--active {

    .definition__pointer {

      transform: scale(1);
    }
  }

  // na razie olaÄ‡ to..
  &--left {

    svg {

      transform: scaleX(-1);
      transform-origin: left top;
    }

    .definition__label {

      left: -$w;
    }

    &.definition--active {

      .definition__label {

        transform: translate(-100px, -100px);
      }
    }
  }

  &--top-right {

    svg {

      transform: scaleX(1);
      transform-origin: left top;
    }

    figure {

      left: 0;
    }
  }

  &--bottom-right {

    svg {

      transform: scaleY(-1);
      transform-origin: left top;
    }

    figure {

      left: 0;
      top: 2 * $offset-arrow;
    }
  }

  &--bottom-left {

    svg {

      transform: scale(-1, -1);
      transform-origin: left top;
    }

    figure {

      left: -$w - (2 * $offset-arrow);
      top: 2 * $offset-arrow;
    }
  }
}

html.map .nav {

  &--hidden {

    background: transparent;

    visibility: hidden;
    opacity: 0;

    transition: opacity .2s ease;

    > figure {

     opacity: 0;
     transition-duration: .1s;
     transition-delay: 0 !important;
   }
  }

  @extend %row;
  position: fixed;
  @include size(100%, 5rem);
  left: 0;
  bottom: 0;
  padding: 1rem;
  z-index: 30;

  background: $black;

  visibility: visible;
  opacity: 1;

  @mixin media-1 {
    @media (max-width: 1200px) { @content; }
  }

  @include media-1 {

    flex-wrap: wrap;
    height: 10rem;
  }

  &__item {

    flex: 1 auto;
    height: 100%;
    padding: $border-w - 2px;
    text-align: center;

    will-change: opacity;
    opacity: 1;
    transition: opacity .2s ease-in;

    @for $i from 2 through 7 {

      &:nth-child(#{$i}) {

        transition-delay: .4s * ($i * 0.25);
      }
    }

    &:not(:last-child) {

      margin-right: 1rem;
    }

    @include media-1 {

      height: calc(50% - 2rem);
      margin: 1rem;
    }

    button {

      width: 100%;
      height: 100%;

      color: $white;
      font-size: 14px;
      font-weight: bold;
      background-color: $black;

      border: 1px solid white;

      transition: background-color .2s ease;

      @include media(not-ipad) {

        &:hover {

          background-color: rgba(255, 255, 255, 0.5);
          color: $black;
          will-change: background-color;
        }
      }

      &:active {

        background-color: rgba(0, 0, 0, 0.5);
        will-change: background-color;
      }
    }

    &--active button {

      background: white;
      color: $black;
      will-change: background-color, color;
    }
  }
}

html.map .u-debug {

  mix-blend-mode: darken;
  opacity: .8;
  // transform: scale(1);
  color: red;
}

html.map.cover-test {

  body {

    background: $blue;

    &:after {

      display: none;
    }
  }

  .u-debug {

    transform: none;
    // @extend %center;
    // width: 400px;
    display: flex;
    flex-flow: column wrap;
    justify-content: center;

    span {

      color: black;
      opacity: .7;
    }

    hr {

      height: 1px;
      display: block;
      background: black;
    }

    h1 {

      font-size: 1rem;
      margin: 1rem;
      display: flex;
      align-self: center;
    }
  }

  .image {

    background: $blue;
    border: 10px solid $yellow;
  }
}
