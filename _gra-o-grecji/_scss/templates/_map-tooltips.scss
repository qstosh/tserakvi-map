// borders' sizes
$border-w: 2px;

// vignette
html.map-tooltips {

  &,
  body {

    overflow: hidden;
    height: 100%;
    background: transparent;
  }

  body {

    position: relative;

    opacity: 0;
    transform: translate3d(0,0,0) scale(1.3);


    &.loaded {

      transition: opacity .3s ease-out .6s,
                  transform .3s ease-out .6s;
      opacity: 1;
      transform: translate3d(0,0,0) scale(1);
      will-change: opacity, transform;
    }
  }

  button {

    text-transform: none;
  }
}

html.map-tooltips .map-wrapper {

  height: 100%;
}

html.map-tooltips .image {

  position: absolute;
  top: 50%;
  left: 50%;

  background-image: url(../images/min/map.jpg);
  background-repeat: no-repeat;
  background-position: center center;
  background-size: cover;

  transform-origin: center center;
  transform: translate3d(0, 0, 0) scale(.75);

  transition: transform .3s ease .1s;

  z-index: 1;

  @include media(highdpi) {

    background-image: url(../images/min/map@2x.jpg);
  }

  &--svg {

    background-image: url("../images/map.svg");

    @include media(highdpi) {

      background-image: url("../images/map.svg");
    }
  }

  &[class*="remove-active"] {

    will-change: transform;
  }

  .definition {

    transition: opacity .3s ease 1s;
  }

  &--zoomed {

    .definition {

      will-change: opacity;
      opacity: 0;
      visibility: hidden;
      transition: opacity .3s ease 0s;

      z-index: -1;
    }

    .definition--active {

      visibility: visible;
      opacity: 1;

      z-index: 2;
    }

    .definition__circle:before {

      display: none;
    }
  }

  &__scale-reset {

    @include square(4000px);
    @include center;

    pointer-events: none;

    &--zoomed-in {

      cursor: zoom-out;
      z-index: 999990;

      pointer-events: auto;
    }
  }
}

html.map-tooltips .toggle {

  position: fixed;
  z-index: 9999;
  left: $width-scroll-bar + $space;

  &--definition {

    bottom: $space;
  }

  &--intro {

    bottom: $space + 3rem;
  }

  label {

    cursor: pointer;

    &.ng-animate {

      transition: none;
    }
  }
}

html.map-tooltips .nav {

  &--hidden {

    background: transparent;

    visibility: hidden;
    opacity: 0;

    transition: opacity .2s ease;

    > figure {

     opacity: 0;
     transition-duration: .1s;
     transition-delay: 0 !important;
   }
  }

  @extend %row-wrap;
  position: fixed;
  width: 65%;
  left: 0;
  top: 0;
  padding: $space-half $space 0 $width-scroll-bar + $space;

  visibility: visible;
  opacity: 1;

  z-index: 30;

  &__item {

    flex: 0 0 auto;
    order: 1;
    text-align: center;
    margin: ($space / 2) 0 0 ($space / 2);

    will-change: opacity;
    opacity: 1;
    transition: opacity .15s ease-in;

    &:first-child {

      margin-left: 0;
    }

    button {

      @include circle(40px);
      padding: 0;
      position: relative;

      font-size: 13px;
      font-weight: bold;

      color: $black;
      background-color: white;
      border: 2px solid $black;

      transition: background-color .2s ease;

      &:after {

        content: attr(data-title);
        @extend %center;
      }

      @include media(not-ipad) {

        &:hover {

          background-color: rgba(0, 0, 0, .5);
          color: white;
          will-change: background-color;
        }
      }

      &:active {

        background-color: rgba(255, 255, 255, 0.4);
        will-change: background-color;
      }
    }

    &--active {

      button {

        background-color: $black;
        color: white;
        will-change: background-color, color;

        &:hover {

          background-color: rgba(0,0,0,.5);
          color: white;
        }
      }
    }
  }
}

html.map-tooltips .definition {

  left: 50%;
  top: 50%;
  transform-style: flat;

  &.ng-hide {

    opacity: 0;
    z-index: -1;
    transition-delay: 0s;
  }

  &.ng-hide-remove {

    transition-delay: 0s;
  }

  &,
  > * {

    position: absolute;
    transform-origin: left top;
  }

  > * {

    top: 0;
    left: 0;
  }

  &__circle {

    background: $black;
    position: absolute;

    top: -15px;
    left: -15px;
    transform-origin: center center;

    cursor: pointer;

    transform: scale(1);
    transition: transform .2s ease .4s;

    &,
    &:after {

      @include circle(30px);
    }

    &:before {

      content: attr(data-title);
      position: absolute;
      @extend %center;
      font-weight: bold;
      z-index: 1;
    }

    &:after {

      content: "";
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%) scale(.9);
      background: white;

      transition: transform .2s ease .4s;
    }

    &--active {

      will-change: transform;
      transform: scale(.65);

      &:after {

        will-change: transform;
        transform: translate(-50%, -50%) scale(.5);
      }
    }
  }
}

html.map-tooltips .tooltips-wrapper {

  @extend %fill-viewport;
  z-index: 10;
  pointer-events: none;

  transition: opacity .2s ease-in;

  &.ng-enter {

    opacity: 0;

    .tooltip--active .tooltip__line,
    .tooltip--active .tooltip__text {

      transition-delay: 0s !important;
    }

    .tooltip__line {

      transform: scale(0) !important;
    }

    .tooltip__text {

      transform: translate(0, -50%) scale(0) !important;
    }
  }

  &.ng-enter.ng-enter-active {

    opacity: 1;
  }

  &--active {

    opacity: 1;
  }

  &.ng-leave.ng-leave-active {

    opacity: 0;
  }

  &.ng-leave {

    transition-duration: 0s;
  }

  .tooltip {

    position: absolute;
    display: inline-block;

    pointer-events: initial;

    top: 50%;
    left: 50%;

    [class*="line"],
    [class*="text"],
    [class*="circle"] {

      position: absolute
    }

    [class*="line"],
    [class*="text"] {

      transition-duration: 0s;
    }

    [class*="line"],
    [class*="circle"] {

      display: table;
    }

    [class*="circle"] {

      @include circle(24px);
      background: white;
      border: 2px solid;
    }

    [class*="line"] {

      @include size(100px, 2px);
      background: black;
    }

    [class*="text"] {

      display: inline-block;
      width: 300px;
      padding: $space;
      background: white;
      border: 2px solid;
      border-radius: $border-radius * 2;

      opacity: 1;

      h3 {

        font: bold 1em $font;
        margin: $space / 4 0 $space;
      }

      p {

        &:first-child {

          margin-top: 0;
        }

        &:last-child {

          margin-bottom: 0;
        }
      }
    }

    &--right {

      [class*="line"],
      [class*="text"] {

        transform-origin: left center;
      }

      [class*="line"],
      [class*="circle"] {

        left: 6px;
        bottom: -1px;
      }

      [class*="circle"] {

        transform: translate(-12px, 12px);
      }

      [class*="line"] {

        transform: scale(0);
      }

      [class*="text"] {

        transform: translate(0, -50%) scale(0);
      }
    }

    &--left {

      [class*="line"],
      [class*="text"] {

        transform-origin: right center;
      }

      [class*="line"],
      [class*="circle"] {

        right: 6px;
        bottom: -1px;
      }

      [class*="circle"] {

        transform: translate(-12px, 12px);
      }

      [class*="line"] {

        transform: scale(0);
      }

      [class*="text"] {

        transform: translate(0, -50%) scale(0);
        right: 0;
      }
    }

    &--active {

      &[class*="right"] {

        [class*="line"],
        [class*="text"] {

          transition: transform .2s ease-out .45s;
        }

        [class*="line"] {

          transform: scale(1);
        }

        [class*="text"] {

          transform: translate(70px, -50%) scale(1);
        }
      }

      &[class*="left"] {

        [class*="line"],
        [class*="text"] {

          transition: transform .2s ease-out .45s;
        }

        [class*="line"] {

          transform: scale(1);
        }

        [class*="text"] {

          transform: translate(-70px, -50%) scale(1);
        }
      }
    }
  }
}

html.map-tooltips .fullscreen-overlay {

  z-index: 999999999999;
  cursor: pointer;

  transform: scale(1);
  opacity: 1;

  &,
  &:before {

    @extend %fill-viewport;
  }

  &:before {

    content: "";
    background: black;
    opacity: .75;
  }

  i:before {

    font-size: 3rem;
  }

  > i {

    @extend %center;
    color: white;

    &:before {

      font-size: 10rem;
    }
  }

  &--inactive {

    pointer-events: none;
    will-change: transform, opacity;
    transition: transform .3s ease-out, opacity .3s ease-out;

    transform: scale(2);
    opacity: 0;
  }
}
